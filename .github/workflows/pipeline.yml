name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  SKIP_DEPLOYMENT: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Test
        run: npm test   
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: E2E tests
        run: npm run test:e2e
      - name: Deploy to Fly.io
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOYMENT == 'false' }}
        uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOYMENT == 'false' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Debug webhook secret
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "Webhook secret length: ${#DISCORD_WEBHOOK}"
          echo "Webhook starts with: ${DISCORD_WEBHOOK:0:8}"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test notification
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content":"üß™ **Testing Discord webhook** - This should appear in Discord"}' \
               "$DISCORD_WEBHOOK"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Success notification
        if: ${{ success() && github.event_name == 'push' && env.SKIP_DEPLOYMENT == 'false' }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content":"üöÄ **A new version of Pokedex deployed** to https://pdx.fly.dev/ by ${{ github.actor }}"}' \
               "$DISCORD_WEBHOOK"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Failure notification
        if: ${{ failure() }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content":"‚ùå **Build failed** - commit [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}) by ${{ github.actor }} broke the build :("}' \
               "$DISCORD_WEBHOOK"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      # Testing rjstone/discord-webhook-notify@v2 action alongside curl
      - name: Test notification (rjstone action)
        if: ${{ github.event_name == 'push' }}
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Pokedex CI/CD Bot (Action)"
          text: "üß™ **Testing rjstone/discord-webhook-notify action**"
          severity: info
          title: "Action Test"
          description: "This notification is sent using the rjstone Discord action"
          details: |
            **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            **Actor:** ${{ github.actor }}
          footer: "Sent via rjstone/discord-webhook-notify@v2"

      - name: Success notification (rjstone action)
        if: ${{ success() && github.event_name == 'push' && env.SKIP_DEPLOYMENT == 'false' }}
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Pokedex Deployment Bot (Action)"
          text: "üöÄ **Deployment Successful via Action!**"
          severity: info
          color: '#00ff00'
          title: "New Version Deployed"
          description: "A new version of Pokedex has been successfully deployed using the Discord action!"
          details: |
            **Deployed by:** ${{ github.actor }}
            **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            **Method:** rjstone/discord-webhook-notify@v2
          footer: "Deployment completed successfully via action"

      - name: Failure notification (rjstone action)
        if: ${{ failure() }}
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "Pokedex Build Bot (Action)"
          text: "‚ùå **Build Failed (Action Notification)!**"
          severity: error
          color: '#ff0000'
          title: "Build Failure"
          description: "The build process has failed and needs attention - sent via Discord action."
          details: |
            **Failed by:** ${{ github.actor }}
            **Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            **Branch:** ${{ github.ref_name }}
            **Workflow:** ${{ github.workflow }}
            **Method:** rjstone/discord-webhook-notify@v2
          footer: "Build failed - please check the logs (via action)"


  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false' }}
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch